
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream test.alan.up {
        server localhost:9998 weight=1;
        server localhost:9999 weight=1;
    }

    upstream test1.alan.up {
        server localhost:9999;
    }

    upstream test2.alan.up {
        server localhost:9998;
    }

    upstream eureka.alan.up {
        server localhost:8761;
    }

    server {
        listen       80;
        listen       443 ssl;
        server_name  test.alan.com;

        ssl on;
        # 书写路径时注意，即使使用了include将conf文件写到其它目录，证书路径依然是相对于nginx.conf而言的，且windows下不能以./开头
        ssl_certificate ../ssl/server.crt;
        ssl_certificate_key ../ssl/server.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 使用的协议
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; # 配置加密套件，写法遵循openssl标准
        ssl_prefer_server_ciphers on;

        location / {
            root   /home/www/www;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /home/www/www;
        }
    }

    server {
        listen       80;
        server_name  eureka.alan.com;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://eureka.alan.up; 
        }
    }

    server {
        listen       80;
        listen       443 ssl;
        server_name  apitest.alan.com;

        ssl on;
        # 书写路径时注意，即使使用了include将conf文件写到其它目录，证书路径依然是相对于nginx.conf而言的，且windows下不能以./开头
        ssl_certificate ../ssl/server.crt;
        ssl_certificate_key ../ssl/server.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 使用的协议
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; # 配置加密套件，写法遵循openssl标准
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://test.alan.up; 
            proxy_redirect default;
        }
    }

    server {
        listen       80;
        server_name  apitest1.alan.com;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://test1.alan.up; 
        }
    }

    server {
        listen       80;
        server_name  apitest2.alan.com;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://test2.alan.up; 
        }
    }

}
